/* SPDX-License-Identifier: GPL-2.0 */

#ifndef __YS_XMAC_REGISTER_H_
#define __YS_XMAC_REGISTER_H_

/* MAC reg in bar0 */
#define YS_XMAC_REGS_BAR	0

enum xmac_port_status {
	XMAC_PORT_STATUS_ENABLED  = 0x01, /* Port is enabled */
	XMAC_PORT_STATUS_SFP      = 0x02, /* An SFP is detected in the port */
	XMAC_PORT_STATUS_SIGNAL   = 0x04, /* A signal is detected by the SFP */
	XMAC_PORT_STATUS_LINK     = 0x08, /* The link is active */
	XMAC_PORT_STATUS_AUTONEG_DONE = 0x10, /* Auto-negotiation is complete */
};

/* XMAC subsystem registers */
#define XMAC_SUBSYSTEM_0_OFFSET 0xa00000
#define XMAC_SUBSYSTEM_1_OFFSET 0xa04000
#define XMAC_OFFSET(i) \
	(((i) == 0) ? XMAC_SUBSYSTEM_0_OFFSET : XMAC_SUBSYSTEM_1_OFFSET)

#define XMAC_RSFEC_OFF			(0x0)
#define XMAC_RSFEC_25G			(0x2f)
#define XMAC_RSFEC_10G			(0x2d)
#define XMAC_RSFEC_CONF_ENABLE(i)	(XMAC_OFFSET(i) + 0xd0)
#define XMAC_TICK(i)			(XMAC_OFFSET(i) + 0x20)

#define XMAC_LINK_STATUS(i)		(XMAC_OFFSET(i) + 0x0404)

/* chmode bit field */
#define STAT_CORE_SPEED(val)		((val) << 0)
#define RUNTIME_SWITCHABLE(val)		((val) << 1)

#define XMAC_STAT_CORE_SPEED		BIT_MASK(0)
#define XMAC_RUNTIME_SWITCHABLE		BIT_MASK(1)

#define XMAC_STANDALONE_25G		((RUNTIME_SWITCHABLE(0)) | \
					(STAT_CORE_SPEED(0)))
#define XMAC_STANDALONE_10G		((RUNTIME_SWITCHABLE(0)) | \
					(STAT_CORE_SPEED(1)))
#define XMAC_RUNTIME_SWITCHABLE_25G	((RUNTIME_SWITCHABLE(1)) | \
					(STAT_CORE_SPEED(0)))
#define XMAC_RUNTIME_SWITCHABLE_10G	((RUNTIME_SWITCHABLE(1)) | \
					(STAT_CORE_SPEED(1)))

#define XMAC_STAT_SPEED(i)		(XMAC_OFFSET(i) + 0x0498)

#define XMAC_STATUS_CYCLE_COUNT(i)		(XMAC_OFFSET(i) + 0x0500)
#define XMAC_STAT_RX_FRAMING_ERR(i)		(XMAC_OFFSET(i) + 0x0648)
#define XMAC_STAT_RX_BAD_CODE(i)		(XMAC_OFFSET(i) + 0x0660)
#define XMAC_STAT_RX_ERROR(i)			(XMAC_OFFSET(i) + 0x0668)
#define XMAC_STAT_RX_RSFEC_CORRECTED_CW_INC(i)	(XMAC_OFFSET(i) + 0x0670)
#define XMAC_STAT_RX_RSFEC_UNCORRECTED_CW_INC(i)\
		(XMAC_OFFSET(i) + 0x0678)
#define XMAC_STAT_RX_RSFEC_ERR_COUNT0_INC(i)	(XMAC_OFFSET(i) + 0x0680)

#define XMAC_STAT_TX_FRAMING_ERROR(i)		(XMAC_OFFSET(i) + 0x06A0)
#define XMAC_STAT_TX_TOTAL_PACKETS(i)		(XMAC_OFFSET(i) + 0x0700)
#define XMAC_STAT_TX_TOTAL_GOOD_PACKETS(i)	(XMAC_OFFSET(i) + 0x0708)
#define XMAC_STAT_TX_TOTAL_BYTES(i)		(XMAC_OFFSET(i) + 0x0710)
#define XMAC_STAT_TX_TOTAL_GOOD_BYTES(i)	(XMAC_OFFSET(i) + 0x0718)
#define XMAC_STAT_TX_PACKET_64_BYTES(i)		(XMAC_OFFSET(i) + 0x0720)
#define XMAC_STAT_TX_PACKET_65_127_BYTES(i)	(XMAC_OFFSET(i) + 0x0728)
#define XMAC_STAT_TX_PACKET_128_255_BYTES(i)	(XMAC_OFFSET(i) + 0x0730)
#define XMAC_STAT_TX_PACKET_256_511_BYTES(i)	(XMAC_OFFSET(i) + 0x0738)
#define XMAC_STAT_TX_PACKET_512_1023_BYTES(i)	(XMAC_OFFSET(i) + 0x0740)
#define XMAC_STAT_TX_PACKET_1024_1518_BYTES(i)	(XMAC_OFFSET(i) + 0x0748)
#define XMAC_STAT_TX_PACKET_1519_1522_BYTES(i)	(XMAC_OFFSET(i) + 0x0750)
#define XMAC_STAT_TX_PACKET_1523_1548_BYTES(i)	(XMAC_OFFSET(i) + 0x0758)
#define XMAC_STAT_TX_PACKET_1549_2047_BYTES(i)	(XMAC_OFFSET(i) + 0x0760)
#define XMAC_STAT_TX_PACKET_2048_4095_BYTES(i)	(XMAC_OFFSET(i) + 0x076c)
#define XMAC_STAT_TX_PACKET_4096_8191_BYTES(i)	(XMAC_OFFSET(i) + 0x0770)
#define XMAC_STAT_TX_PACKET_8192_9215_BYTES(i)	(XMAC_OFFSET(i) + 0x0778)
#define XMAC_STAT_TX_PACKET_LARGE(i)		(XMAC_OFFSET(i) + 0x0780)
#define XMAC_STAT_TX_PACKET_SMALL(i)		(XMAC_OFFSET(i) + 0x0788)
#define XMAC_STAT_TX_BAD_FCS(i)			(XMAC_OFFSET(i) + 0x07B8)
#define XMAC_STAT_TX_UNICAST(i)			(XMAC_OFFSET(i) + 0x07D0)
#define XMAC_STAT_TX_MULTICAST(i)		(XMAC_OFFSET(i) + 0x07D8)
#define XMAC_STAT_TX_BROADCAST(i)		(XMAC_OFFSET(i) + 0x07E0)
#define XMAC_STAT_TX_VLAN(i)			(XMAC_OFFSET(i) + 0x07EC)
#define XMAC_STAT_TX_PAUSE(i)			(XMAC_OFFSET(i) + 0x07F0)
#define XMAC_STAT_TX_USER_PAUSE(i)		(XMAC_OFFSET(i) + 0x07F8)

#define XMAC_STAT_RX_TOTAL_PACKETS(i)		(XMAC_OFFSET(i) + 0x0808)
#define XMAC_STAT_RX_TOTAL_GOOD_PACKETS(i)	(XMAC_OFFSET(i) + 0x0810)
#define XMAC_STAT_RX_TOTAL_BYTES(i)		(XMAC_OFFSET(i) + 0x0818)
#define XMAC_STAT_RX_TOTAL_GOOD_BYTES(i)	(XMAC_OFFSET(i) + 0x0820)
#define XMAC_STAT_RX_PACKET_64_BYTES(i)		(XMAC_OFFSET(i) + 0x0828)
#define XMAC_STAT_RX_PACKET_65_127_BYTES(i)	(XMAC_OFFSET(i) + 0x0830)
#define XMAC_STAT_RX_PACKET_128_255_BYTES(i)	(XMAC_OFFSET(i) + 0x0838)
#define XMAC_STAT_RX_PACKET_256_511_BYTES(i)	(XMAC_OFFSET(i) + 0x0840)
#define XMAC_STAT_RX_PACKET_512_1023_BYTES(i)	(XMAC_OFFSET(i) + 0x0848)
#define XMAC_STAT_RX_PACKET_1024_1518_BYTES(i)	(XMAC_OFFSET(i) + 0x0850)
#define XMAC_STAT_RX_PACKET_1519_1022_BYTES(i)	(XMAC_OFFSET(i) + 0x0858)
#define XMAC_STAT_RX_PACKET_1523_1548_BYTES(i)	(XMAC_OFFSET(i) + 0x0860)
#define XMAC_STAT_RX_PACKET_1549_2047_BYTES(i)	(XMAC_OFFSET(i) + 0x0868)
#define XMAC_STAT_RX_PACKET_2048_4095_BYTES(i)	(XMAC_OFFSET(i) + 0x0870)
#define XMAC_STAT_RX_PACKET_4096_8191_BYTES(i)	(XMAC_OFFSET(i) + 0x0878)
#define XMAC_STAT_RX_PACKET_8192_9215_BYTES(i)	(XMAC_OFFSET(i) + 0x0880)
#define XMAC_STAT_RX_PACKET_LARGE(i)		(XMAC_OFFSET(i) + 0x0888)
#define XMAC_STAT_RX_PACKET_SMALL(i)		(XMAC_OFFSET(i) + 0x0890)

#define XMAC_STAT_RX_UNDERSIZE(i)		(XMAC_OFFSET(i) + 0x0898)
#define XMAC_STAT_RX_FRAGMENT(i)		(XMAC_OFFSET(i) + 0x08A0)
#define XMAC_STAT_RX_OVERSIZE(i)		(XMAC_OFFSET(i) + 0x08A8)
#define XMAC_STAT_RX_TOOLONG(i)			(XMAC_OFFSET(i) + 0x08B0)
#define XMAC_STAT_RX_JABBER(i)			(XMAC_OFFSET(i) + 0x08B8)
#define XMAC_STAT_RX_BAD_FCS(i)			(XMAC_OFFSET(i) + 0x08C0)
#define XMAC_STAT_RX_PACKET_BAD_FCS(i)		(XMAC_OFFSET(i) + 0x08C8)
#define XMAC_STAT_RX_STOMPED_BAD_FCS(i)		(XMAC_OFFSET(i) + 0x08D0)
#define XMAC_STAT_RX_UNICAST(i)			(XMAC_OFFSET(i) + 0x08D8)
#define XMAC_STAT_RX_MULTICAST(i)		(XMAC_OFFSET(i) + 0x08E0)
#define XMAC_STAT_RX_BROADCAST(i)		(XMAC_OFFSET(i) + 0x08E8)
#define XMAC_STAT_RX_VLAN(i)			(XMAC_OFFSET(i) + 0x08F0)
#define XMAC_STAT_RX_PAUSE(i)			(XMAC_OFFSET(i) + 0x08F8)
#define XMAC_STAT_RX_USER_PAUSE(i)		(XMAC_OFFSET(i) + 0x0900)

#define XMAC_STAT_RX_INRANGEERR(i)		(XMAC_OFFSET(i) + 0x0908)
#define XMAC_STAT_RX_TRUNCATED(i)		(XMAC_OFFSET(i) + 0x0910)
#define XMAC_STAT_RX_TEST_PATTERN_MISMATCH(i)	(XMAC_OFFSET(i) + 0x0918)
#define XMAC_STAT_FEC_INC_CORRECT_COUNT(i)	(XMAC_OFFSET(i) + 0x0920)
#define XMAC_STAT_FEC_INC_CANT_CORRECT_COUNT(i)	(XMAC_OFFSET(i) + 0x0928)

#define XMAC_BASE_X(macx)	(0x80000 * (macx) + 0x00a00000)
#define XMAC_INTER_VECTOR_SOC_LAN01(macx)	(UMAC_BASE_X(macx) + 0x8028)
#define XMAC_INTER_VECTOR_HOST_LAN01(macx)	(UMAC_BASE_X(macx) + 0x802c)
#define XMAC_INTER_VECTOR_SOC_LAN23(macx)	(UMAC_BASE_X(macx) + 0x8030)
#define XMAC_INTER_VECTOR_HOST_LAN23(macx)	(UMAC_BASE_X(macx) + 0x8034)
#define XMAC_INTER_VECTOR_LAN02_MASK	GENMASK(11, 0)
#define XMAC_INTER_VECTOR_LAN13_MASK	GENMASK(27, 16)
#define XMAC_INTER_ENABLE_REG(macx)	(UMAC_BASE_X(macx) + 0x8038)
#define XMAC_INTER_JITTER_CTL(macx)	(UMAC_BASE_X(macx) + 0x801c)
#define XMAC_INTER_CHX_F_VALUE(macx, chx)	(UMAC_BASE_X(macx) + (0x4 * (chx) + 0x803c))
#define XMAC_INTER_CHX_F_VALUE_HOST_MASK	GENMASK(14, 0)
#define XMAC_INTER_CHX_F_VALUE_SOC_MASK	GENMASK(29, 15)
#define XMAC_CHX_STATUS_REG(macx, chx)	(XMAC_BASE_X(macx) + (0x2000 * (chx) + 0x404))
#define XMAC_INTER_ENABLE_ALL	0xf
#define XMAC_INTER_JITTER_CTL_DEF	0x2faf080 /* 1s */
#define XMAC_STATUS_EN 0x1
#define XMAC_STATUS_MASK 0x1

#endif /* __YS_XMAC_REGISTER_H_ */
