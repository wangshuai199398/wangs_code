/* SPDX-License-Identifier: GPL-2.0 */

#ifndef __YS_K2ULAN_REGISTER_H_
#define __YS_K2ULAN_REGISTER_H_

#define YS_K2ULAN_REGS_BAR	0
#define YS_K2ULAN_BASE	0xc00000
/* k2u lan TX flowsteering regs */
#define YS_K2ULAN_STEERING_TX_DST_QSET_BASE (YS_K2ULAN_BASE + 0x0)
#define YS_K2ULAN_STEERING_TX_DST_QSET_BUTTOM (YS_K2ULAN_BASE + 0x1FFC)
#define YS_K2ULAN_STEERING_TX_DST_QSET_ENTRY_NUMB (0x800)
#define YS_K2ULAN_STEERING_TX_DST_QSET_ENTRY_LEN (0x4)

#define YS_K2ULAN_STEERING_TX_DST_QSET_TOTAL_LEN \
	(YS_K2ULAN_STEERING_TX_DST_QSET_BUTTOM - \
	 YS_K2ULAN_STEERING_TX_DST_QSET_BASE)

#define YS_K2ULAN_STEERING_TX_DST_QSET_PF_BASE (0x800)

#define YS_K2ULAN_STEERING_TX_DST_QSET(n) \
	(YS_K2ULAN_STEERING_TX_DST_QSET_BASE + (n) * 0x4)

struct k2ulan_tx_dst_qset {
	u32 k2ulan_tx_dst_qset_value : 16;
	u32 k2ulan_tx_dst_qset_trust : 1;
	u32 k2ulan_tx_dst_qset_pass_through : 1;
	u32 k2ulan_tx_dst_qset_rsvd : 14;
};

#define YS_K2ULAN_STEERING_TX_DST_QSET_VALUE                   GENMASK(15, 0)
#define YS_K2ULAN_STEERING_TX_DST_QSET_TRUST                   GENMASK(16, 16)
#define YS_K2ULAN_STEERING_TX_DST_QSET_PASSTHROUGH             GENMASK(17, 17)
#define YS_K2ULAN_STEERING_TX_DST_QSET_PASSTHROUGH_VALID       GENMASK(18, 18)
#define YS_K2ULAN_STEERING_TX_DST_QSET_RSVD                    GENMASK(31, 19)

#define YS_K2ULAN_STEERING_TX_GLOBAL_BASE (YS_K2ULAN_BASE + 0x20000)
#define YS_K2ULAN_STEERING_TX_GLOBAL_SUBSYSTEM_EN \
	(YS_K2ULAN_STEERING_TX_GLOBAL_BASE + 0x0)
#define YS_K2ULAN_STEERING_TX_GLOBAL_GLOBAL_MODE \
	(YS_K2ULAN_STEERING_TX_GLOBAL_BASE + 0x4)
#define YS_K2ULAN_STEERING_TX_GLOBAL_OFFLOAD_MODE \
	(YS_K2ULAN_STEERING_TX_GLOBAL_BASE + 0x8)
#define YS_K2ULAN_STEERING_TX_GLOBAL_BOTTOM (YS_K2ULAN_BASE + 0x84)

struct k2ulan_tx_global_subsystem_en {
	u32 k2ulan_switch_subsystem_en : 1;
	u32 k2ulan_offload_subsystem_en : 1;
	u32 k2ulan_vlantag_subsystem_en : 1;
	u32 k2ulan_lan_pre_en : 1;
	u32 k2ulan_lan_parser_en : 1;
	u32 rsvd : 27;
};

#define YS_K2ULAN_TX_GLOBAL_SWITCH_SUB_EN		GENMASK(0, 0)
#define YS_K2ULAN_TX_GLOBAL_OFFLOAD_SUB_EN		GENMASK(1, 1)
#define YS_K2ULAN_TX_GLOBAL_VLANTAG_OFFLOAD_SUB_EN	GENMASK(2, 2)
#define YS_K2ULAN_TX_GLOBAL_LAN_PRE_SUB_EN		GENMASK(3, 3)
#define YS_K2ULAN_TX_GLOBAL_LAN_PARSER_EN		GENMASK(4, 4)
#define YS_K2ULAN_TX_GLOBAL_SUBSYSTEM_RSVD		GENMASK(31, 5)

struct k2ulan_tx_global_mode {
	u32 k2ulan_loop_enable : 1;
	u32 k2ulan_vlan_bitflag_en : 1;
	u32 rsvd : 30;
};

#define YS_K2ULAN_TX_GLOBAL_LOOP_ENABLE		GENMASK(0, 0)
#define YS_K2ULAN_TX_GLOBAL_VLAN_BITFLAG_EN	GENMASK(1, 1)
#define YS_K2ULAN_TX_GLOBAL_MODE_RSVD		GENMASK(31, 2)

#define YS_K2ULAN_STEERING_TX_QSET_QINQ_CFG_BASE (YS_K2ULAN_BASE + 0x2000)
#define YS_K2ULAN_STEERING_TX_QSET_QINQ_CFG_BOTTOM (YS_K2ULAN_BASE + 0x3FFF)
#define YS_K2ULAN_STEERING_TX_QSET_QINQ_CFG_TOTAL_LEN \
	(YS_K2ULAN_STEERING_TX_QSET_QINQ_CFG_BOTTOM - \
	 YS_K2ULAN_STEERING_TX_QSET_QINQ_CFG_BASE)

#define YS_K2ULAN_STEERING_TX_QSET_QINQ_CFG(qset)	\
	(YS_K2ULAN_STEERING_TX_QSET_QINQ_CFG_BASE + ((qset) * (0x4)))

struct k2ulan_tx_qset_qinq_cfg {
	u32 qinq_pvid : 16;
	u32 qinq_type : 16;
};

#define YS_K2ULAN_TX_QSET_QINQ_CFG_QINQ_PVID	GENMASK(15, 0)
#define YS_K2ULAN_TX_QSET_QINQ_CFG_QINQ_TYPE	GENMASK(31, 16)

#define YS_K2ULAN_STEERING_TX_QSET_OFFLOAD_VEB_BASE (YS_K2ULAN_BASE + 0x4000)
#define YS_K2ULAN_STEERING_TX_QSET_OFFLOAD_VEB_BOTTOM (YS_K2ULAN_BASE + 0x5FFF)
#define YS_K2ULAN_STEERING_TX_QSET_OFFLOAD_VEB_TOTAL_LEN \
	(YS_K2ULAN_STEERING_TX_QSET_OFFLOAD_VEB_BOTTOM - \
	 YS_K2ULAN_STEERING_TX_QSET_OFFLOAD_VEB_BASE)

#define YS_K2ULAN_STEERING_TX_QSET_OFFLOAD_VEB(qset)	\
	(YS_K2ULAN_STEERING_TX_QSET_OFFLOAD_VEB_BASE + ((qset) * (0x4)))

struct k2ulan_offload_veb {
	u32 vlan_type : 16;
	u32 veb_enable : 1;
	u32 qinq_vlan_mode : 1;
	u32 inner_vlan_trust : 1;
	u32 src_mac_filter_enable : 1;
	u32 rsvd : 12;
};

#define YS_K2ULAN_TX_QSET_OFFLOAD_VEB_VLAN_TYPE		GENMASK(15, 0)
#define YS_K2ULAN_TX_QSET_OFFLOAD_VEB_VEB_EN		GENMASK(16, 16)
#define YS_K2ULAN_TX_QSET_OFFLOAD_VEB_QINQ_VLAN_MODE	GENMASK(17, 17)
#define YS_K2ULAN_TX_QSET_OFFLOAD_VEB_INNER_VLAN_TRUST	GENMASK(18, 18)
#define YS_K2ULAN_TX_QSET_OFFLOAD_VEB_SRC_MAC_FILTER_EN	GENMASK(19, 19)
#define YS_K2ULAN_TX_QSET_OFFLOAD_VEB_RSVD		GENMASK(31, 20)

#define YS_K2ULAN_STEERING_TX_VPORT_BASE (YS_K2ULAN_BASE + 0x6000)
#define YS_K2ULAN_STEERING_TX_VPORT_BOTTOM (YS_K2ULAN_BASE + 0x7FFF)
#define YS_K2ULAN_STEERING_TX_VPORT_TOTAL_LEN \
	(YS_K2ULAN_STEERING_TX_VPORT_BOTTOM - \
	 YS_K2ULAN_STEERING_TX_VPORT_BASE)

/* k2u lan RX flowsteering regs */
#define YS_K2ULAN_STEERING_RX_GLOBAL_BASE (YS_K2ULAN_BASE + 0x100000)
#define YS_K2ULAN_STEERING_RX_GLOBAL_BOTTOM (YS_K2ULAN_BASE + 0x10FFFF)

#define YS_K2ULAN_STEERING_RX_PARSER_EN \
	(YS_K2ULAN_STEERING_RX_GLOBAL_BASE + 0x34)

struct k2ulan_rx_parser_enable {
	u32 parser_enable : 1;
	u32 rsvd : 31;
};

#define YS_K2ULAN_RX_PARSER_ENABLE			GENMASK(0, 0)
#define YS_K2ULAN_RX_PARSER_RSVD			GENMASK(31, 1)

#define YS_K2ULAN_STEERING_RX_RSVD_MC_MATCH_KEY0 \
	(YS_K2ULAN_STEERING_RX_GLOBAL_BASE + 0x168)
#define YS_K2ULAN_STEERING_RX_RSVD_MC_MATCH_KEY1 \
	(YS_K2ULAN_STEERING_RX_GLOBAL_BASE + 0x170)
#define YS_K2ULAN_STEERING_RX_RSVD_MC_MATCH_KEY2 \
	(YS_K2ULAN_STEERING_RX_GLOBAL_BASE + 0x178)
#define YS_K2ULAN_STEERING_RX_RSVD_MC_MATCH_KEY3 \
	(YS_K2ULAN_STEERING_RX_GLOBAL_BASE + 0x180)
#define YS_K2ULAN_STEERING_RX_RSVD_MC_MATCH_KEY4 \
	(YS_K2ULAN_STEERING_RX_GLOBAL_BASE + 0x188)
#define YS_K2ULAN_STEERING_RX_RSVD_MC_MATCH_KEY5 \
	(YS_K2ULAN_STEERING_RX_GLOBAL_BASE + 0x190)
#define YS_K2ULAN_STEERING_RX_RSVD_MC_MATCH_KEY6 \
	(YS_K2ULAN_STEERING_RX_GLOBAL_BASE + 0x198)
#define YS_K2ULAN_STEERING_RX_RSVD_MC_MATCH_KEY7 \
	(YS_K2ULAN_STEERING_RX_GLOBAL_BASE + 0x1a0)

struct k2ulan_rx_rsvd_mc_key {
	u32 mc_key_lo32bits;
	u32 mc_key_hi16bits : 16;
	u32 mc_key_mask_len : 6;
	u32 valid : 1;
	u32 rsvd : 9;
};

#define YS_K2ULAN_RX_RSVD_MC_MAC_LO32BITS	GENMASK(31, 0)
#define YS_K2ULAN_RX_RSVD_MC_MAC_HI16BITS	GENMASK(15, 0)
#define YS_K2ULAN_RX_RSVD_MC_KEY_MASK_LEN	GENMASK(21, 16)
#define YS_K2ULAN_RX_RSVD_MC_MAC_VALID		GENMASK(22, 22)
#define YS_K2ULAN_RX_RSVD_MC_RSVD		GENMASK(31, 23)

#define YS_K2ULAN_STEERING_RX_QEST_BASE (YS_K2ULAN_BASE + 0x110000)
#define YS_K2ULAN_STEERING_RX_QEST_BOTTOM (YS_K2ULAN_BASE + 0x11FFFF)

#define YS_K2ULAN_STEERING_RX_QEST_TOTAL_LEN \
	(YS_K2ULAN_STEERING_RX_QEST_BOTTOM - YS_K2ULAN_STEERING_RX_QEST_BASE)

#define YS_K2ULAN_STEERING_RX_MAC_FILTER_BASE (YS_K2ULAN_BASE + 0x120000)
#define YS_K2ULAN_STEERING_RX_MAC_FILTER_REG_NUMB (0x3)
#define YS_K2ULAN_STEERING_RX_MAC_FILTER_REG_OFFSET_STEP (0x100)
#define YS_K2ULAN_STEERING_RX_MAC_FILTER_REG_OFFSET_BASE (0x8000)
#define YS_K2ULAN_STEERING_RX_MAC_FILTER_REG(n) \
	(YS_K2ULAN_STEERING_RX_MAC_FILTER_BASE + YS_K2ULAN_STEERING_RX_MAC_FILTER_REG_OFFSET_BASE \
	+ ((n) * YS_K2ULAN_STEERING_RX_MAC_FILTER_REG_OFFSET_STEP))
#define YS_K2ULAN_STEERING_RX_MAC_FILTER_BOTTOM (YS_K2ULAN_BASE + 0x12FFFF)

#define YS_K2ULAN_STEERING_RX_MAC_RULE_BASE (YS_K2ULAN_BASE + 0x140000)
#define YS_K2ULAN_STEERING_RX_MAC_RULE_BOTTOM (YS_K2ULAN_BASE + 0x160000)
#define YS_K2ULAN_STEERING_RX_MAC_FILTER_TOTAL_LEN \
	(YS_K2ULAN_STEERING_RX_MAC_RULE_BOTTOM - YS_K2ULAN_STEERING_RX_MAC_FILTER_BASE)

#define YS_K2ULAN_STEERING_RX_MAC_RULE_ENTRY_NUMB (0x400)
#define YS_K2ULAN_RX_MAC_RULE_NUMB (YS_K2ULAN_STEERING_RX_MAC_RULE_ENTRY_NUMB)
#define YS_K2ULAN_STEERING_RX_MAC_RULE_ENTRY_LEN (0x80)
#define YS_K2ULAN_STEERING_RX_MAC_RULE_TOTAL_LEN \
	(YS_K2ULAN_STEERING_RX_MAC_RULE_ENTRY_NUMB * YS_K2ULAN_STEERING_RX_MAC_RULE_ENTRY_LEN)
#define YS_K2ULAN_STEERING_RX_MAC_RULE_ENTRY_ADDR(n) \
	(YS_K2ULAN_STEERING_RX_MAC_RULE_BASE + \
	 ((n) * (YS_K2ULAN_STEERING_RX_MAC_RULE_ENTRY_LEN)))

#define YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_BASE (YS_K2ULAN_BASE + 0x150000)
#define YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_BOTTOM (YS_K2ULAN_BASE + 0x15FFFF)
#define YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_TOTAL_LEN \
	(YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_BOTTOM - \
	 YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_BASE)

#define YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_REG_OFFSET_BASE (0x8000)
#define YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_REG_NUMB (0x3)
#define YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_REG_OFFSET_STEP (0x100)
#define YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_REG(n) \
	(YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_BASE + \
	 YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_REG_OFFSET_BASE \
	 + ((n) * YS_K2ULAN_STEERING_RX_IPV4_L2MC_FILTER_REG_OFFSET_STEP))

#define YS_K2ULAN_STEERING_RX_IPV4_L2MC_RULE_ENTRY_LEN (128)
#define YS_K2ULAN_STEERING_RX_IPV4_L2MC_RULE_ENTRY_NUMB (0x400)
#define YS_K2ULAN_RX_IPV4_L2MC_RULE_NUMB (YS_K2ULAN_STEERING_RX_IPV4_L2MC_RULE_ENTRY_NUMB)

#define YS_K2ULAN_STEERING_RX_VLAN_FILTER_BASE (YS_K2ULAN_BASE + 0x270000)
#define YS_K2ULAN_STEERING_RX_VLAN_FILTER_TYPE0_BASE (YS_K2ULAN_BASE + 0x270000)
#define YS_K2ULAN_STEERING_RX_VLAN_FILTER_TYPE1_BASE (YS_K2ULAN_BASE + 0x274000)
#define YS_K2ULAN_STEERING_RX_VLAN_FILTER_BOTTOM (YS_K2ULAN_BASE + 0x27FFFF)

#define YS_K2ULAN_STEERING_RX_VLAN_FILTER_ENTRY_NUMB (0x1000)
#define YS_K2ULAN_STEERING_RX_VLAN_FILTER_ENTRY_LEN (0x4)

#define YS_K2ULAN_STEERING_RX_VLAN_FILTER_TOTAL_LEN \
	(YS_K2ULAN_STEERING_RX_VLAN_FILTER_ENTRY_NUMB * \
	YS_K2ULAN_STEERING_RX_VLAN_FILTER_ENTRY_LEN)

#define YS_K2ULAN_STEERING_RX_VLAN_FILTER_VLAN_BMP_FIELD(n) \
	((n) * YS_K2ULAN_STEERING_RX_VLAN_FILTER_ENTRY_LEN)

struct k2ulan_vlan_filter {
	u32 vlan_qset_bmp_index : 12;
	u32 vlan_enable : 1;
	u32 rsvd : 19;
};

#define YS_K2ULAN_VLAN_FILTER_QSET_BMP_INDEX	GENMASK(11, 0)
#define YS_K2ULAN_VLAN_FILTER_ENABLE		GENMASK(12, 12)
#define YS_K2ULAN_VLAN_FILTER_RSVD		GENMASK(31, 13)

#define YS_K2ULAN_STEERING_RX_VLAN_RULE_BASE (YS_K2ULAN_BASE + 0x280000)
#define YS_K2ULAN_STEERING_RX_VLAN_RULE_BOTTOM (YS_K2ULAN_BASE + 0x2FFFFF)
#define YS_K2ULAN_STEERING_RX_VLAN_RULE_NUMS (0x1000)
#define YS_K2ULAN_STEERING_RX_VLAN_RULE_TOTAL_LEN \
	(YS_K2ULAN_STEERING_RX_VLAN_RULE_BOTTOM - \
	 YS_K2ULAN_STEERING_RX_VLAN_RULE_BASE)

#define YS_K2ULAN_STEERING_RX_VLAN_RULE_ENTRY_LEN (0x80)

#define YS_K2ULAN_STEERING_RX_VLAN_RULE_ENTRY_ADDR(n) \
	(YS_K2ULAN_STEERING_RX_VLAN_RULE_BASE + \
	 ((n) * YS_K2ULAN_STEERING_RX_VLAN_RULE_ENTRY_LEN))

#define YS_K2ULAN_STEERING_QSET(n) (YS_K2ULAN_BASE + 0x110000 + (n) * 0x10)

#define YS_K2ULAN_STEERING_QSET_QID(n, index) \
	(YS_K2ULAN_STEERING_QSET(n) + 0x4 * (index))

#define YS_K2ULAN_STEERING_QSET_HASH(n) (YS_K2ULAN_STEERING_QSET(n))

#define YS_K2ULAN_HASH_TUNNEL_PKT_SEL_OUTER	1
#define YS_K2ULAN_HASH_TUNNEL_PKT_SEL_INNER	0

struct k2ulan_qset_hash {
	u32 q_ipv6_tcp_hash_mode : 5;
	u32 q_ipv6_udp_hash_mode : 5;
	u32 q_ipv4_tcp_hash_mode : 5;
	u32 q_ipv4_udp_hash_mode : 5;
	u32 q_tunnel_pkt_hash_sel : 1;	// 1 use udp tunnel head info, 0 use tunnel payload info
	u32 rsvd : 11;
};

#define YS_K2ULAN_QSET_HASH_MODE_IPV6_TCP		GENMASK(4, 0)
#define YS_K2ULAN_QSET_HASH_MODE_IPV6_UDP		GENMASK(9, 5)
#define YS_K2ULAN_QSET_HASH_MODE_IPV4_TCP		GENMASK(14, 10)
#define YS_K2ULAN_QSET_HASH_MODE_IPV4_UDP		GENMASK(19, 15)
#define YS_K2ULAN_QSET_TUNNEL_PKT_HASH_SEL		GENMASK(20, 20)
#define YS_K2ULAN_QSET_HASH_MODE_RSVD			GENMASK(31, 21)

#define YS_K2ULAN_STEERING_QSET_MTU(n) (YS_K2ULAN_STEERING_QSET(n) + 0x4)

struct k2ulan_qset_mtu {
	u32 q_mtu : 14;
	u32 q_vlan_offload_mode : 2;
	u32 rsvd : 1;
	u32 q_over_mtu_drop : 1;
	u32 q_fcs_err_drop : 1;
	u32 q_check_err_drop : 1;
	u32 rsvd_1 : 1;
	u32 vport : 4;
	u32 rsvd_2 : 7;
};

enum {
	YS_K2ULAN_RX_VLAN_OFFLOAD_MODE_BOTH_BYPASS = 0x0,
	YS_K2ULAN_RX_VLAN_OFFLOAD_MODE_CTAG_OFFLOAD = 0x1,
	YS_K2ULAN_RX_VLAN_OFFLOAD_MODE_STAG_OFFLOAD = 0x2,
	YS_K2ULAN_RX_VLAN_OFFLOAD_MODE_RSVD = 0x3,
};

#define YS_K2ULAN_QSET_MTU_MISC_MTU			GENMASK(13, 0)
#define YS_K2ULAN_QSET_MTU_MISC_VLAN_OFFLOAD_MODE	GENMASK(15, 14)
#define YS_K2ULAN_QSET_MTU_MISC_UFO_EN			GENMASK(16, 16)
#define YS_K2ULAN_QSET_MTU_MISC_OVER_MTU_DROP		GENMASK(17, 17)
#define YS_K2ULAN_QSET_MTU_MISC_FCS_ERR_DROP		GENMASK(18, 18)
#define YS_K2ULAN_QSET_MTU_MISC_CHKSUM_ERR_DROP		GENMASK(19, 19)
#define YS_K2ULAN_QSET_MTU_MISC_RSVD			GENMASK(20, 20)
#define YS_K2ULAN_QSET_MTU_MISC_VPORT			GENMASK(24, 21)
#define YS_K2ULAN_QSET_MTU_MISC_RSVD_1			GENMASK(31, 25)

#define YS_K2ULAN_STEERING_QSET_QINQ(n) (YS_K2ULAN_STEERING_QSET(n) + 0x8)

struct k2ulan_qset_qinq {
	u32 pvid : 12;
	u32 pvid_type : 1;
	u32 pvid_valid : 1;
	u32 pvid_bypass : 1;
	u32 stag_vlan_valid : 1;
	u32 ctag_vlan_valid : 1;
	u32 bc_disable : 1;
	u32 smartnic_promiscuous : 1;
	u32 umc_flood_enable : 1;
	u32 promiscuous_enable : 1;
	u32 src_dst_qset_filter : 1;
	u32 q_port0_en : 1;
	u32 q_port1_en : 1;
	u32 q_port2_en : 1;
	u32 q_port3_en : 1;
	u32 q_port4_en : 1;
	u32 q_port5_en : 1;
	u32 q_port6_en : 1;
	u32 q_port7_en : 1;
	u32 pvid_tpid_type : 2;
};

#define YS_K2ULAN_QSET_VID_MISC_PVID			GENMASK(11, 0)
#define YS_K2ULAN_QSET_VID_MISC_PVID_TYPE		GENMASK(12, 12)
#define YS_K2ULAN_QSET_VID_MISC_PVID_VALID		GENMASK(13, 13)
#define YS_K2ULAN_QSET_VID_MISC_PVID_BYPASS		GENMASK(14, 14)
#define YS_K2ULAN_QSET_VID_MISC_STAG_VLAN_VALID		GENMASK(15, 15)
#define YS_K2ULAN_QSET_VID_MISC_CTAG_VLAN_VALID		GENMASK(16, 16)
#define YS_K2ULAN_QSET_VID_MISC_BC_DISABLE		GENMASK(17, 17)
#define YS_K2ULAN_QSET_VID_MISC_SMARTNIC_PROMISCUOUS	GENMASK(18, 18)
#define YS_K2ULAN_QSET_VID_MISC_UMC_FLOOD_ENABLE	GENMASK(19, 19)
#define YS_K2ULAN_QSET_VID_MISC_PROMISCUOUS_ENABLE	GENMASK(20, 20)
#define YS_K2ULAN_QSET_VID_MISC_SRC_EQ_DST_DROP		GENMASK(21, 21)
#define YS_K2ULAN_QSET_VID_MISC_PORT_0_ENABLE		GENMASK(22, 22)
#define YS_K2ULAN_QSET_VID_MISC_PORT_1_ENABLE		GENMASK(23, 23)
#define YS_K2ULAN_QSET_VID_MISC_PORT_2_ENABLE		GENMASK(24, 24)
#define YS_K2ULAN_QSET_VID_MISC_PORT_3_ENABLE		GENMASK(25, 25)
#define YS_K2ULAN_QSET_VID_MISC_PORT_4_ENABLE		GENMASK(26, 26)
#define YS_K2ULAN_QSET_VID_MISC_PORT_5_ENABLE		GENMASK(27, 27)
#define YS_K2ULAN_QSET_VID_MISC_PORT_6_ENABLE		GENMASK(28, 28)
#define YS_K2ULAN_QSET_VID_MISC_PORT_7_ENABLE		GENMASK(29, 29)
#define YS_K2ULAN_QSET_VID_MISC_PORT_ENABLE		GENMASK(29, 22)
#define YS_K2ULAN_QSET_VID_MISC_RSVD			GENMASK(31, 30)

/* lan statistics regiters */
#define YS_K2ULAN_RX_DEBUG_STATS_BASE			(YS_K2ULAN_BASE + 0x3E0000)
#define YS_K2ULAN_RX_DEBUG_STATS_SW_DROP_CNT_CH0	(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x10C0)
#define YS_K2ULAN_RX_DEBUG_STATS_SW_HIT_CNT_CH0		(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x10C8)
#define YS_K2ULAN_RX_DEBUG_STATS_SW_DROP_CNT_CH1	(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x10D0)
#define YS_K2ULAN_RX_DEBUG_STATS_SW_HIT_CNT_CH1		(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x10D8)
#define YS_K2ULAN_RX_DEBUG_STATS_SW_DROP_CNT_CH2	(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x10E0)
#define YS_K2ULAN_RX_DEBUG_STATS_SW_HIT_CNT_CH2		(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x10E8)
#define YS_K2ULAN_RX_DEBUG_STATS_SW_DROP_CNT_CH3	(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x10F0)
#define YS_K2ULAN_RX_DEBUG_STATS_SW_HIT_CNT_CH3		(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x10F8)

#define YS_K2ULAN_RX_DEBUG_STATS_MAC_MISS_CNT		(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x1108)
#define YS_K2ULAN_RX_DEBUG_STATS_FIRST_VLAN_MISS_CNT	(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x1118)
#define YS_K2ULAN_RX_DEBUG_STATS_SECOND_VLAN_MISS_CNT	(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x1120)
#define YS_K2ULAN_RX_DEBUG_STATS_PVID_MISS_CNT		(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x1128)
#define YS_K2ULAN_RX_DEBUG_STATS_VEB_DROP_CNT		(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x1130)
#define YS_K2ULAN_RX_DEBUG_STATS_FCS_DROP_CNT		(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x1138)
#define YS_K2ULAN_RX_DEBUG_STATS_CHKSUM_DROP_CNT	(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x1140)
#define YS_K2ULAN_RX_DEBUG_STATS_MTU_DROP_CNT		(YS_K2ULAN_RX_DEBUG_STATS_BASE + 0x1148)

#endif /* __YS_K2ULAN_REGISTER_H_ */
